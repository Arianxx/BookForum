# Generated by Django 2.0.5 on 2018-05-16 06:41

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Auther',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='post name')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='book name')),
                ('pub_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('slug', models.SlugField(max_length=64, unique=True)),
                ('auther', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Idea', to='Idea.Auther')),
            ],
            options={
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Discuss',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='discussion title')),
                ('body', models.TextField(blank=True, max_length=1280, verbose_name='discussion')),
                ('pub_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussions', to='Idea.Book')),
            ],
        ),
        migrations.CreateModel(
            name='DiscussReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=1280, verbose_name='reply')),
                ('pub_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('discuss', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replys', to='Idea.Discuss')),
            ],
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up', models.IntegerField(default=0, verbose_name="up's count")),
                ('down', models.IntegerField(default=0, verbose_name="down's count")),
                ('book', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Idea.Book')),
            ],
        ),
        migrations.CreateModel(
            name='Publishing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='publishing name')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='tag name')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='publishing',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Idea', to='Idea.Publishing'),
        ),
        migrations.AddField(
            model_name='book',
            name='tags',
            field=models.ManyToManyField(related_name='Idea', to='Idea.Tag'),
        ),
        migrations.AlterUniqueTogether(
            name='book',
            unique_together={('name', 'auther')},
        ),
    ]
